#!/bin/bash

if ! [ "CLOUD_SHELL" == "true" ] ; then
	echo 'ERROR: No Google Cloud Shell environment detected. Aborting.'
	exit 1
fi

. ~/gopath/bin/startserver-main # source the main script
serve_keyfile
. ~/.gcs-x2go # source Cloud Shell X2Go Server config
echo '0. run "gcloud cloud-shell ssh" on your client and run "createserver" or'
echo '   "thawserver" followed by "startserver-google-jumphost" (you already did this or else'
echo '   you would not be reading this)'
echo '1. run "gcloud cloud-shell get-mount-command YOUR_SSHFS_MOUNTPOINT_HERE" on your'
echo '   client to determine IP, user, and port for the ssh connection'
echo '   the output will look something like this: sshfs'
echo '   USERNAME@IP.WILL.BE.HERE: sshfs -p PORT_NUMBER -oIdentityFile=/PATH_TO_YOUR_SSH_SECRET_KEYFILE -oStrictHostKeyChecking=no'
echo '2. configure X2GoClient for a connection to Host 127.0.0.1, Login '"${USERNAME}"', Port 222'
echo '3. select "Use Proxy server for SSH connection"'
echo '4. select Type "SSH"'
echo '5. enter Host (IP), Port, and Username as determined in step #1'
echo '6. either specify the path to your Google Cloud Shell SSH Public Key File,'
echo '   or load the key into your SSH Agent and check the SSH Agent box.'
echo '7. make sure you either keep your "gcloud cloud-shell ssh" session running'
echo '   or actually run the command shown in step #1 and keep the sshfs mounted'
echo '   while you intend to use your X2Go Cloud Server. Do not forget to run'
echo '   "fusermount -u YOUR_SSHFS_MOUNTPOINT_HERE" once you are done if you used'
echo '   the sshfs command or your instance will keep running - remember, your usage'
echo '   is limited to a certain amount of hours in a seven-day window!'
echo 'Note: The YOUR_SSHFS_MOUNTPOINT_HERE directory needs to exist before you can'
echo '      issue the sshfs mount command from step #1. Use the mkdir command if necessary.'
