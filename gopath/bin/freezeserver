#!/bin/bash -e

# Google prefers tmux over screen; it's installed already and cloud shell via
# Web Browser uses it by default, so make sure we're using it too - this is
# for connecting directly via "gcloud cloud-shell ssh", which normally doesn't
# spawn tmux - so a loss of connection means an undefined state regarding
# the currently running job. For jobs like freezeserver and thawserver, this
# can be very frustrating. So now we respawn them within tmux if it's not
# already running, thereby increasing the chance of a successful reconnect.
which tmux >/dev/null && [ -n "$TMUX" ] || exec tmux "$0" "$@"

cd ~ # just to play it safe, we'll chdir to our own homedir
. ~/.gcs-x2go # now let's source the config file

[ -z "$SERVERNAME" ] && exit 1 # no server name? That's a hard error, so let's bail out

if [ "$SERVER_USE_ROOT" = "true" ] ; then # prepend / if server changeroot is in root directory
	export SERVERNAME="/$SERVERNAME"
fi

if [ -f $SERVERNAME-home/$SERVERNAME.tar.xz ]; then
	echo "A file '$SERVERNAME-home/$SERVERNAME.tar.xz' already exists. Aborting."
	exit 1
fi

sudo apt install pixz -y

echo "Stopping server ..."
stopserver && echo "... stopped."
echo "Freezing server ..."
if (sudo tar -I"pixz -9" -cf $HOME/$SERVERNAME-home/$SERVERNAME.tar.xz $SERVERNAME && sudo rm -rf $SERVERNAME); then
	echo "... frozen as '$SERVERNAME-home/$SERVERNAME.tar.xz'."
else
	echo "An error occurred. Attempting to delete broken archive ..."
	if sudo rm $HOME/$SERVERNAME-home/$SERVERNAME.tar.xz; then
		echo "... deleted."
	else
		echo "... unable to delete '$HOME/$SERVERNAME-home/$SERVERNAME.tar.xz'. Please fix this manually."
		exit 1
	fi
fi
